(ns blog.vega
  (:require
    [cljs.reader :as reader]))

(defc dataset
  [{:x "A" :y 28} {:x "B" :y 55} {:x "C" :y 43}
   {:x "D" :y 91} {:x "E" :y 81} {:x "F" :y 53}
   {:x "G" :y 19} {:x "H" :y 87} {:x "I" :y 52}])

(defc width "400")
(defc height "200")

(def scale-types ["ordinal" "linear"])
       ; :viewport [200,200]
       ; :padding {:top 10 :left 30 :bottom 20 :right 10}
(defc= edn-spec
  (-> {:data [{:name "table" :values dataset}]
       :scales [{:name "x"
                 :type "ordinal"
                 :range "width"
                 :domain {:data "table" :field "data.x"}}
                {:name "y"
                 ; :type "linear" ;this is the default type
                 :range "height"
                 :nice true
                 :domain {:data "table" :field "data.y"}}]
       :axes [{:type "x" :scale "x"}
              {:type "y" :scale "y"
               ; :ticks 5 ; number of ticks
               ; :orient "right" ; axis position
               ; :offset 6 ; adjust the axis position in 6px
               }]
       :marks [{:type "rect"
                :from {:data "table"}
                :properties {:enter {:x {:scale "x" :field "data.x"}
                                     :width {:scale "x"
                                             :band true ;divides the range in uniform bands
                                             :offset -1 ;reduces the width by 1px
                                             }
                                     :y  {:scale "y" :field "data.y"}
                                     :y2 {:scale "y" :value 0}}
                             :update {:fill {:value "steelblue"}}
                             :hover {:fill {:value "red"}}
                             }}]}
      (assoc
        :width (reader/read-string width)
        :height (reader/read-string height)))
  )

(defc= json-spec (clj->js edn-spec))
