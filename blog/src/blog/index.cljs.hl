(page "index.html"
  (:require
    [blog.db :as db]
    [clojure.string :as str]
    [blog.route :as r]
    [blog.vega :as b-v]
    [hoplon.vega :as vega]
    [hoplon.mui :as m]
    [datascript :as d]
    [hoplon.highlight :as hl]
    [cljsjs.highlight.langs.clojure]
    [hoplon.markdown :as md]))

(defn timestamps [created-at updated-at]
  (span :css {:color "grey"}
    (str "Original date: " created-at (when-let [update (first updated-at)] (str " / Last updated: " update)))))

(defn render [[tag s]]
  (case tag
    :md (md/to-html div s)
    :code (hl/highlight s)))

(defn post [{:keys [title content created-at updated-at] :as m}]
  [(h1 title)
   (timestamps created-at updated-at)
   (m/panel
     (map render content))])

(defn post-link [[title date permalink]]
  (div :class "mui-text-title"
    (a :href (str "#/blog/" permalink)
      (str date ": " title))))

(defn list-posts [conn]
  [(h1 "Posts:")
   (m/panel
     (map post-link (sort-by second > (db/post-list conn))))])

(defc= current-post (db/current-post r/permalink db/conn))

(html
  (head
    (link :href="blog.css" :rel="stylesheet"))
  (body
    (m/appbar
      (td :class "mui-appbar-height"
        (div :class "mui-text-headline mui-text-accent"
          "mynomoto's experiments")))
    (div :class "mui-container" (cell= (if (str/blank? r/permalink)
                                         (list-posts db/conn)
                                         (post current-post))))))
